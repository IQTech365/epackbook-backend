name: Deploy application

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [production]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  buildServer:
    name: Deploy docker image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: martcues-server
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR 
          echo "Building docker image for user app"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Docker image build successfully"
          echo "Pushing docker image to ecr..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy containers
    runs-on: ubuntu-latest
    needs: [buildServer]

    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Login to ECR
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 537614905934.dkr.ecr.us-east-1.amazonaws.com
            # Stop running container
            docker stop martcues-server
            # Delete previously running container
            docker rm martcues-server
            # Delete previous image
            docker image rm 537614905934.dkr.ecr.us-east-1.amazonaws.com/martcues-server
            # Pull new image
            docker pull 537614905934.dkr.ecr.us-east-1.amazonaws.com/martcues-server
            # Start new container
            docker run --name martcues-server -p 8000:8000 -d 537614905934.dkr.ecr.us-east-1.amazonaws.com/martcues-server:latest
